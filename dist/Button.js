class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`\n            <button class='${this.getAttribute("type")||""}'>\n                <span>${this.getAttribute("label")||"Click Me"}</span>\n            </button>\n        `;const t=document.createElement("style");t.textContent="\n            button {\n                border: 2px solid #5F2878;\n                background-color: #5F2878;\n                color: white;\n                //font-family: VMCircularChatPTT,Arial,Helvetica,\"sans-serif\";\n                font-family: \"VMMomentum\", Arial, Helvetica, sans-serif;\n                height: 48px;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                border-radius: 32px;\n                min-width: 128px;\n                width: 100%;\n                max-width: 250px;\n                cursor: pointer;\n            }\n            button.secondary {\n                background-color: white;\n                color: #5F2878;\n            }\n        ",this.shadowRoot.append(t),this.shadowRoot.querySelector("button").addEventListener("click",(()=>this.handleClick()));}handleClick(){console.log("Button clicked!"),this.dispatchEvent(new Event("button-click",{bubbles:!0,composed:!0}));}static get observedAttributes(){return["label","disabled","type"];}attributeChangedCallback(t,e,n){const o=this.shadowRoot.querySelector("button");"label"===t&&o&&(o.textContent=n),"type"===t&&(o.classList=n);}}customElements.define("cro-button",t);
