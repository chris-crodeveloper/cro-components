(self.webpackChunk_virginmediao2_cro_components=self.webpackChunk_virginmediao2_cro_components||[]).push([[883],{"./stories/cro-header/Header.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./stories/cro-header/Header.js");const __WEBPACK_DEFAULT_EXPORT__={title:"CRO/Header",tags:["autodocs"],argTypes:{label:{control:"text"}}},Template=({label,disabled,type})=>{const croHeader=document.createElement("cro-header");return label&&croHeader.setAttribute("label",label),croHeader},Default=Template.bind({});Default.args={label:"Click Me"};const Secondary=Template.bind({});Secondary.args={label:"Click Me Please"};const __namedExportsOrder=["Default","Secondary"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  label,\n  disabled,\n  type\n}) => {\n  const croHeader = document.createElement('cro-header');\n  if (label) croHeader.setAttribute('label', label);\n  return croHeader;\n}",...Default.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"({\n  label,\n  disabled,\n  type\n}) => {\n  const croHeader = document.createElement('cro-header');\n  if (label) croHeader.setAttribute('label', label);\n  return croHeader;\n}",...Secondary.parameters?.docs?.source}}}},"./stories/cro-header/Header.js":()=>{class Header extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`\n            <h3>${this.getAttribute("label")||"Header"}</h3>\n        `;const style=document.createElement("style");style.textContent="\n            h3 {\n                font-size: 30px;\n            }\n        ",this.shadowRoot.append(style)}static get observedAttributes(){return["label"]}attributeChangedCallback(name,oldValue,newValue){const header=this.shadowRoot.querySelector("h3");"label"===name&&header&&(header.textContent=newValue)}}customElements.define("cro-header",Header)}}]);